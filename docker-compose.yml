version: "3.7"

services:
  service1:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: service1
    ports:
      - "3001:3000"
      - "9229:9229"
    environment:
      PARSER: "PARSER_A"
      SERVICE_ID: "service1"
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    restart: "unless-stopped"
    depends_on:
      - kafka
    networks:
      - backend

  service2:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: service2
    ports:
      - "3002:3000"
      - "9222:9229"
    environment:
      PARSER: "PARSER_B"
      SERVICE_ID: "service2"
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    restart: "unless-stopped"
    depends_on:
      - kafka
    networks:
      - backend

  service3:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: service3
    ports:
      - "3003:3000"
      - "9223:9229"
    environment:
      PARSER: "PARSER_C"
      SERVICE_ID: "service3"
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    restart: "unless-stopped"
    depends_on:
      - kafka
    networks:
      - backend

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSET_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "MessageTopic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
