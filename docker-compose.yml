version: "3.7"

services:
  # proxy:
  #   image: nginx:alpine
  #   container_name: proxy
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   restart: "unless-stopped"
  #   networks:
  #     - backend
  service1:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: service1
    ports:
      - "3001:3000"
      - "9229:9229"
    environment:
      NODE_ENV: dev
      PARSER: "PARSER_A"
      SERVICE_ID: "service1"
      SECRET: "service1Secret_!"
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    restart: "unless-stopped"
    networks:
      - backend

  service2:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: service2
    ports:
      - "3002:3000"
      - "9222:9229"
    environment:
      NODE_ENV: dev
      PARSER: "PARSER_B"
      SERVICE_ID: "service2"
      SECRET: "service2Secret_!"
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    restart: "unless-stopped"
    networks:
      - backend

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
